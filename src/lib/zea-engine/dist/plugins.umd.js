!function(Z){"function"==typeof define&&define.amd?define(Z):Z()}((function(){"use strict";const Z=function(){if(!window.navigator)return{isMobileDevice:!1,isIOSDevice:!1,browserName:"Node",webGLSupported:!1,gpuDesc:null,deviceCategory:"High"};const Z=null!=(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Pixel/i)||navigator.userAgent.match(/Windows Phone/i)),l=function(){const Z=navigator.userAgent;let l,b,d,m=navigator.appName,c=""+parseFloat(navigator.appVersion),G=parseInt(navigator.appVersion,10);return navigator.brave?(m="Brave",b=Z.indexOf("Chrome"),c=Z.substring(b+7,Z.indexOf(" ",b+7))):-1!=(b=Z.indexOf("Opera"))?(m="Opera",c=Z.substring(b+6),-1!=(b=Z.indexOf("Version"))&&(c=Z.substring(b+8))):-1!=(b=Z.indexOf("MSIE"))?(m="Microsoft Internet Explorer",c=Z.substring(b+5)):-1!=(b=Z.indexOf("Edge"))?(m="Edge",c=Z.substring(b+4)):-1!=(b=Z.indexOf("Chrome"))?(m="Chrome",c=Z.substring(b+7,Z.indexOf(" ",b+7))):-1!=(b=Z.indexOf("Safari"))?(m="Safari",c=Z.substring(b+7),-1!=(b=Z.indexOf("Version"))&&(c=Z.substring(b+8))):-1!=(b=Z.indexOf("Firefox"))?(m="Firefox",c=Z.substring(b+8)):(l=Z.lastIndexOf(" ")+1)<(b=Z.lastIndexOf("/"))&&(m=Z.substring(l,b),c=Z.substring(b+1),m.toLowerCase()==m.toUpperCase()&&(m=navigator.appName)),-1!=(d=c.indexOf(";"))&&(c=c.substring(0,d)),-1!=(d=c.indexOf(" "))&&(c=c.substring(0,d)),G=parseInt(""+c,10),isNaN(G)&&(c=""+parseFloat(navigator.appVersion),G=parseInt(navigator.appVersion,10)),{browserName:m,fullVersion:c,majorVersion:G,appName:navigator.appName,userAgent:navigator.userAgent}}(),b=function(){let Z,l;try{Z=document.createElement("canvas").getContext("webgl")}catch(Z){}if(!Z)return;try{l=document.createElement("canvas").getContext("webgl2")}catch(Z){}const b=Z.getExtension("WEBGL_debug_renderer_info");if(!b)return console.warn("Unable to determine GPU Info:"),{vendor:"Unknown",renderer:"Unknown",gpuVendor:"Unknown",maxTextureSize:"Unknown",supportsWebGL2:null!=l};const d=Z.getParameter(b.UNMASKED_VENDOR_WEBGL),m=Z.getParameter(b.UNMASKED_RENDERER_WEBGL),c=Z.getParameter(Z.MAX_TEXTURE_SIZE);let G;return m.match(/NVIDIA/i)?G="NVidia":m.match(/AMD/i)||m.match(/Radeon/i)?G="AMD":m.match(/Intel/i)?G="Intel":m.match(/Mali/i)?G="ARM":m.match(/Apple/i)?G="Apple":m.match(/Adreno/i)?G="Adreno":m.match(/Google Swiftshader/i)?G="Google":console.warn("Unable to determine GPU vendor:",m),{vendor:d,renderer:m,gpuVendor:G,maxTextureSize:c,supportsWebGL2:null!=l}}();let d="Low";if(b)if(Z)d="Low";else{const Z=b.renderer.replace(/[()]/g,"").split(" ");if("NVidia"==b.gpuVendor){const l=Z.indexOf("GTX");if(-1!=l){const b=Z[l+1];if(b.endsWith("M")){d=parseInt(b.substring(0,b.length-2))>=900?"Medium":"Low"}else{d=parseInt(b)>=1030?"High":"Medium"}}else d=Z.includes("RTX")||Z.includes("TITAN")||Z.includes("Quadro")?"High":"Low"}else if("AMD"==b.gpuVendor){const l=Z.indexOf("Radeon");if(-1!=l){const b=Z.indexOf("RX");if(-1!=b)if("Vega"==Z[b+1])d="High";else{const l=Z[b+1];let m;l.endsWith("X")?(m=parseInt(l.substring(0,l.length-2)),d="High"):m=parseInt(l),d=m>=480?"High":"Medium"}else if("Pro"==Z[l+1]){d=parseInt(Z[b+1])>=450?"Medium":"Low"}else if("Sky"==Z[l+1]){d=parseInt(Z[b+1])>=700?"Medium":"Low"}else d="Low"}else d=Z.includes("FirePro")||Z.includes("Quadro")?"High":"Low"}else("Adreno"==b.gpuVendor||"Intel"==b.gpuVendor||"Google"==b.gpuVendor)&&(d="Low")}return{isMobileDevice:Z,isIOSDevice:null!=(navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)),browserName:l.browserName,fullVersion:l.fullVersion,majorVersion:l.majorVersion,appName:l.appName,userAgent:l.userAgent,webGLSupported:null!=b,gpuDesc:b,deviceCategory:d}}();window.ZeaSystemDesc||(window.ZeaSystemDesc=Z);var l=null;try{var b="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");l=b.Worker}catch(Z){}function d(Z,b,d){var m=void 0===b?null:b,c=function(Z,l){return Buffer.from(Z,"base64").toString(l?"utf16":"utf8")}(Z,void 0!==d&&d),G=c.indexOf("\n",10)+1,X=c.substring(G)+(m?"//# sourceMappingURL="+m:"");return function(Z){return new l(X,Object.assign({},Z,{eval:!0}))}}function m(Z,l,b){var d=void 0===l?null:l,m=function(Z,l){var b=atob(Z);if(l){for(var d=new Uint8Array(b.length),m=0,c=b.length;m<c;++m)d[m]=b.charCodeAt(m);return String.fromCharCode.apply(null,new Uint16Array(d.buffer))}return b}(Z,void 0!==b&&b),c=m.indexOf("\n",10)+1,G=m.substring(c)+(d?"//# sourceMappingURL="+d:""),X=new Blob([G],{type:"application/javascript"});return URL.createObjectURL(X)}var c="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0);var G,X,V,W=(G="",X=null,V=!1,c?d(G,X,V):function(Z,l,b){var d;return function(c){return d=d||m(Z,l,b),new Worker(d,c)}}(G,X,V));let y=window.navigator.hardwareConcurrency;y||(y=Z.isMobileDevice?4:6),y--;const u=new class{constructor(){this.__callbacks={},this.__workers=[],this.__nextWorker=0}init(Z){this.resourceLoader=Z,this.wasmUrl=this.resourceLoader.baseUrl+"public-resources/unpack.wasm"}getType(){return"archive"}__getWorker(){return this.__nextWorker=(this.__nextWorker+1)%y,null==this.__workers[this.__nextWorker]&&(this.__workers[this.__nextWorker]=(()=>new Promise((Z=>{const l=new W;l.postMessage({type:"init",wasmUrl:this.wasmUrl}),l.onmessage=b=>{if("WASM_LOADED"===b.data.type)Z(l);else if("FINISHED"===b.data.type)this.__onFinishedReceiveFileData(b.data);else if("ERROR"===b.data.type){const Z=b.data;console.error(`Unable to load Resource: ${Z.resourceId}`)}}})))()),this.__workers[this.__nextWorker]}__terminateWorkers(){for(const Z of this.__workers)Z.terminate();this.__workers=[]}loadFile(Z){this.resourceLoader.incrementWorkload(1);return new Promise(((l,b)=>{Z in this.__callbacks||(this.__callbacks[Z]=[]),this.__callbacks[Z].push(l),fetch(Z).then((l=>{if(this.resourceLoader.incrementWorkDone(1),function(Z){return!!Z.ok&&Z}(l))return l.arrayBuffer();b(new Error(`loadArchive: ${l.status} - ${l.statusText} : ${Z}`))})).then((b=>{const d=Z;d in this.__callbacks||(this.__callbacks[d]=[]),this.__callbacks[d].push(l),this.__getWorker().then((Z=>{Z.postMessage({type:"unpack",resourceId:d,buffer:b})}))}))}),(()=>{}))}__onFinishedReceiveFileData(Z){const l=Z.resourceId,b=this.__callbacks[l];if(b){for(const l of b)l(Z.entries);delete this.__callbacks[l]}}};window.zeaEngine.resourceLoader.registerPlugin(u);const i=new class{init(Z){this.resourceLoader=Z}getType(){return"json"}loadFile(Z){this.resourceLoader.incrementWorkload(1);return new Promise(((l,b)=>{fetch(Z).then((d=>{this.resourceLoader.incrementWorkDone(1),!function(Z){return!!Z.ok&&Z}(d)?b(`loadJSON: ${d.status} - ${d.statusText} : ${Z}`):l(d.json())}))}),(()=>{}))}};window.zeaEngine.resourceLoader.registerPlugin(i);const I=new class{init(Z){this.resourceLoader=Z}getType(){return"text"}loadFile(Z){this.resourceLoader.incrementWorkload(1);return new Promise(((l,b)=>{fetch(Z).then((d=>{this.resourceLoader.incrementWorkDone(1),!function(Z){return!!Z.ok&&Z}(d)?b(`loadText: ${d.status} - ${d.statusText} : ${Z}`):l(d.text())}))}),(()=>{}))}};window.zeaEngine.resourceLoader.registerPlugin(I);const p=new class{init(Z){this.resourceLoader=Z}getType(){return"binary"}loadFile(Z){this.resourceLoader.incrementWorkload(1);return new Promise(((l,b)=>{fetch(Z).then((d=>{this.resourceLoader.incrementWorkDone(1),!function(Z){return!!Z.ok&&Z}(d)?b(`loadBinary: ${d.status} - ${d.statusText} : ${Z}`):l(d.arrayBuffer())}))}),(()=>{}))}};window.zeaEngine.resourceLoader.registerPlugin(p)}));
//# sourceMappingURL=plugins.umd.js.map
