{"version":3,"file":"plugins.umd.js","sources":["../src/SystemDesc.js","../src/SceneTree/ResourceLoader/ArchiveUnpackerPlugin.js","../src/index-plugins.js","../src/SceneTree/ResourceLoader/JsonLoaderPlugin.js","../src/SceneTree/ResourceLoader/TextLoaderPlugin.js","../src/SceneTree/ResourceLoader/BinaryLoaderPlugin.js"],"sourcesContent":["// eslint-disable-next-line require-jsdoc\nfunction isIOSDevice() {\n  return (\n    (navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i) ||\n      navigator.userAgent.match(/iPod/i)) != null\n  )\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction isMobileDevice() {\n  return (\n    (navigator.userAgent.match(/Android/i) ||\n      navigator.userAgent.match(/webOS/i) ||\n      navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i) ||\n      navigator.userAgent.match(/iPod/i) ||\n      navigator.userAgent.match(/BlackBerry/i) ||\n      navigator.userAgent.match(/Pixel/i) ||\n      navigator.userAgent.match(/Windows Phone/i)) != null\n  )\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction getBrowserDesc() {\n  const nVer = navigator.appVersion\n  const nAgt = navigator.userAgent\n  let browserName = navigator.appName\n  let fullVersion = '' + parseFloat(navigator.appVersion)\n  let majorVersion = parseInt(navigator.appVersion, 10)\n  let nameOffset\n  let verOffset\n  let ix\n\n  if (navigator.brave) {\n    browserName = 'Brave'\n    verOffset = nAgt.indexOf('Chrome')\n    fullVersion = nAgt.substring(verOffset + 7, nAgt.indexOf(' ', verOffset + 7))\n  }\n\n  // In Opera, the true version is after \"Opera\" or after \"Version\"\n  else if ((verOffset = nAgt.indexOf('Opera')) != -1) {\n    browserName = 'Opera'\n    fullVersion = nAgt.substring(verOffset + 6)\n    if ((verOffset = nAgt.indexOf('Version')) != -1) fullVersion = nAgt.substring(verOffset + 8)\n  }\n  // In MSIE, the true version is after \"MSIE\" in userAgent\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\n    browserName = 'Microsoft Internet Explorer'\n    fullVersion = nAgt.substring(verOffset + 5)\n  } else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\n    browserName = 'Edge'\n    fullVersion = nAgt.substring(verOffset + 4)\n  }\n  // In Chrome, the true version is after \"Chrome\"\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\n    browserName = 'Chrome'\n    fullVersion = nAgt.substring(verOffset + 7, nAgt.indexOf(' ', verOffset + 7))\n  }\n\n  // TOOD: Parse Samsung userAgent\n  // https://developer.samsung.com/technical-doc/view.do?v=T000000203\n\n  // In Safari, the true version is after \"Safari\" or after \"Version\"\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\n    browserName = 'Safari'\n    fullVersion = nAgt.substring(verOffset + 7)\n    if ((verOffset = nAgt.indexOf('Version')) != -1) fullVersion = nAgt.substring(verOffset + 8)\n  }\n  // In Firefox, the true version is after \"Firefox\"\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\n    browserName = 'Firefox'\n    fullVersion = nAgt.substring(verOffset + 8)\n  }\n  // In most other browsers, \"name/version\" is at the end of userAgent\n  else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n    browserName = nAgt.substring(nameOffset, verOffset)\n    fullVersion = nAgt.substring(verOffset + 1)\n    if (browserName.toLowerCase() == browserName.toUpperCase()) {\n      browserName = navigator.appName\n    }\n  }\n  // trim the fullVersion string at semicolon/space if present\n  if ((ix = fullVersion.indexOf(';')) != -1) fullVersion = fullVersion.substring(0, ix)\n  if ((ix = fullVersion.indexOf(' ')) != -1) fullVersion = fullVersion.substring(0, ix)\n\n  majorVersion = parseInt('' + fullVersion, 10)\n  if (isNaN(majorVersion)) {\n    fullVersion = '' + parseFloat(navigator.appVersion)\n    majorVersion = parseInt(navigator.appVersion, 10)\n  }\n\n  return {\n    browserName,\n    fullVersion,\n    majorVersion,\n    appName: navigator.appName,\n    userAgent: navigator.userAgent,\n  }\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction getGPUDesc() {\n  let webgl\n  try {\n    webgl = document.createElement('canvas').getContext('webgl')\n  } catch (e) {}\n  if (!webgl) return\n  let webgl2\n  try {\n    webgl2 = document.createElement('canvas').getContext('webgl2')\n  } catch (e) {}\n\n  const debugInfo = webgl.getExtension('WEBGL_debug_renderer_info')\n  if (!debugInfo) {\n    console.warn('Unable to determine GPU Info:')\n    return {\n      vendor: 'Unknown',\n      renderer: 'Unknown',\n      gpuVendor: 'Unknown',\n      maxTextureSize: 'Unknown',\n      supportsWebGL2: webgl2 != undefined,\n    }\n  }\n\n  const vendor = webgl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL)\n  const renderer = webgl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)\n  const maxTextureSize = webgl.getParameter(webgl.MAX_TEXTURE_SIZE)\n  let gpuVendor\n  if (renderer.match(/NVIDIA/i)) {\n    gpuVendor = 'NVidia'\n  } else if (renderer.match(/AMD/i) || renderer.match(/Radeon/i)) {\n    gpuVendor = 'AMD'\n  } else if (renderer.match(/Intel/i)) {\n    gpuVendor = 'Intel'\n  } else if (renderer.match(/Mali/i)) {\n    gpuVendor = 'ARM'\n  } else if (renderer.match(/Apple/i)) {\n    gpuVendor = 'Apple'\n  } else if (renderer.match(/Adreno/i)) {\n    gpuVendor = 'Adreno'\n  } else if (renderer.match(/Google Swiftshader/i)) {\n    gpuVendor = 'Google'\n  } else {\n    console.warn('Unable to determine GPU vendor:', renderer)\n  }\n\n  return {\n    vendor,\n    renderer,\n    gpuVendor,\n    maxTextureSize,\n    supportsWebGL2: webgl2 != undefined,\n  }\n}\n\nconst SystemDesc = (function () {\n  // Note: globalThis causes errors on Safari.\n  if (!window.navigator) {\n    return {\n      isMobileDevice: false,\n      isIOSDevice: false,\n      browserName: 'Node',\n      webGLSupported: false,\n      gpuDesc: null,\n      deviceCategory: 'High',\n    }\n  }\n  const isMobile = isMobileDevice()\n  const browserDesc = getBrowserDesc()\n  const gpuDesc = getGPUDesc()\n\n  let deviceCategory = 'Low'\n  if (gpuDesc) {\n    // We divide devices into 3 categories.\n    // 0: low end, we dial everything down as much as possible\n    // 1: mid-range, Enb maps and Textures go to mid-lods.\n    //    Typically these devices are laptops, so the textures can't be too blurry\n    // 2: High-end: turn up as much as needed.\n    if (!isMobile) {\n      // Remove braces and split into parts\n      const parts = gpuDesc.renderer.replace(/[()]/g, '').split(' ')\n      if (gpuDesc.gpuVendor == 'NVidia') {\n        const gtxIdx = parts.indexOf('GTX')\n        if (gtxIdx != -1) {\n          const model = parts[gtxIdx + 1]\n          if (model.endsWith('M')) {\n            // laptop GPU.\n            const modelNumber = parseInt(model.substring(0, model.length - 2))\n            if (modelNumber >= 900) {\n              deviceCategory = 'Medium'\n            } else {\n              deviceCategory = 'Low'\n            }\n          } else {\n            const modelNumber = parseInt(model)\n            if (modelNumber >= 1030) {\n              deviceCategory = 'High'\n            } else {\n              deviceCategory = 'Medium'\n            }\n          }\n        } else {\n          if (parts.includes('RTX') || parts.includes('TITAN') || parts.includes('Quadro')) {\n            deviceCategory = 'High'\n          } else {\n            deviceCategory = 'Low'\n          }\n        }\n      } else if (gpuDesc.gpuVendor == 'AMD') {\n        const radeonIdx = parts.indexOf('Radeon')\n        if (radeonIdx != -1) {\n          const rxIdx = parts.indexOf('RX')\n          if (rxIdx != -1) {\n            if (parts[rxIdx + 1] == 'Vega') {\n              deviceCategory = 'High'\n            } else {\n              const model = parts[rxIdx + 1]\n              let modelNumber\n              if (model.endsWith('X')) {\n                modelNumber = parseInt(model.substring(0, model.length - 2))\n                deviceCategory = 'High'\n              } else {\n                modelNumber = parseInt(model)\n              }\n\n              if (modelNumber >= 480) {\n                deviceCategory = 'High'\n              } else {\n                deviceCategory = 'Medium'\n              }\n            }\n          } else if (parts[radeonIdx + 1] == 'Pro') {\n            const modelNumber = parseInt(parts[rxIdx + 1])\n            if (modelNumber >= 450) {\n              deviceCategory = 'Medium'\n            } else {\n              deviceCategory = 'Low'\n            }\n          } else if (parts[radeonIdx + 1] == 'Sky') {\n            const modelNumber = parseInt(parts[rxIdx + 1])\n            if (modelNumber >= 700) {\n              deviceCategory = 'Medium'\n            } else {\n              deviceCategory = 'Low'\n            }\n          } else {\n            deviceCategory = 'Low'\n          }\n        } else {\n          if (parts.includes('FirePro') || parts.includes('Quadro')) {\n            deviceCategory = 'High'\n          } else {\n            deviceCategory = 'Low'\n          }\n        }\n      } else if (gpuDesc.gpuVendor == 'Adreno') {\n        deviceCategory = 'Low'\n      } else if (gpuDesc.gpuVendor == 'Intel') {\n        deviceCategory = 'Low'\n      } else if (gpuDesc.gpuVendor == 'Google') {\n        deviceCategory = 'Low'\n      }\n    } else {\n      deviceCategory = 'Low'\n    }\n  }\n\n  return {\n    isMobileDevice: isMobile,\n    isIOSDevice: isIOSDevice(),\n    browserName: browserDesc.browserName,\n    fullVersion: browserDesc.fullVersion,\n    majorVersion: browserDesc.majorVersion,\n    appName: browserDesc.appName,\n    userAgent: browserDesc.userAgent,\n    webGLSupported: gpuDesc != undefined,\n    gpuDesc,\n    deviceCategory,\n  }\n})()\n\nif (!window.ZeaSystemDesc) {\n  window.ZeaSystemDesc = SystemDesc\n}\n\nexport { SystemDesc }\n","import { SystemDesc } from '../../SystemDesc.js'\nimport ArchiveUnpackerWorker from 'web-worker:./ArchiveUnpackerWorker.js'\n// For synchronous loading, uncomment these lines.\n// import {\n//     ResourceLoaderWorker_onmessage\n// } from './ArchiveUnpackerWorker.js';\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\nlet numCores = window.navigator.hardwareConcurrency\nif (!numCores) {\n  if (SystemDesc.isMobileDevice) numCores = 4\n  else numCores = 6\n}\nnumCores-- // always leave one main thread code spare.\n\n/**\n * Archive unpacker plugin.\n */\nclass ArchiveUnpackerPlugin {\n  constructor() {\n    this.__callbacks = {}\n    this.__workers = []\n    this.__nextWorker = 0\n  }\n\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n    this.wasmUrl = this.resourceLoader.baseUrl + 'public-resources/unpack.wasm'\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'archive'\n  }\n\n  /**\n   * The __getWorker method.\n   * @return {any} - The return value.\n   * @private\n   */\n  __getWorker() {\n    const __constructWorker = () => {\n      return new Promise((resolve) => {\n        const worker = new ArchiveUnpackerWorker()\n        // const worker = new Worker(this.__resourceLoaderFile.url);\n\n        worker.postMessage({\n          type: 'init',\n          wasmUrl: this.wasmUrl,\n        })\n        worker.onmessage = (event) => {\n          if (event.data.type === 'WASM_LOADED') {\n            resolve(worker)\n          } else if (event.data.type === 'FINISHED') {\n            // const data = event.data\n            // const text = [\n            //   '==================== ArchiveUnpackerWorker.js ====================',\n            //   `Filename: ${data.resourceId}`,\n            //   '------------------------------------------------------',\n            // ];\n            // for(const file in data.entries) {\n            //   text.push(`${file}:${data.entries[file].byteLength}`);\n            // }\n            // console.log(text.join('\\n'))\n\n            this.__onFinishedReceiveFileData(event.data)\n          } else if (event.data.type === 'ERROR') {\n            const data = event.data\n            console.error(`Unable to load Resource: ${data.resourceId}`)\n          }\n        }\n      })\n    }\n\n    this.__nextWorker = (this.__nextWorker + 1) % numCores\n    if (this.__workers[this.__nextWorker] == undefined) this.__workers[this.__nextWorker] = __constructWorker()\n    return this.__workers[this.__nextWorker]\n  }\n\n  /**\n   * The __terminateWorkers value.\n   * @private\n   */\n  __terminateWorkers() {\n    for (const worker of this.__workers) worker.terminate()\n    this.__workers = []\n  }\n\n  /**\n   * Loads an archive file, returning a promise that resolves to the JSON data value.\n   * Note: using the resource loader to centralize data loading enables progress to be tracked and displayed\n   * @param {string} url - The url of the data to load.\n   * @return {Promise} - The promise value.\n   */\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1) //  start loading.\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        if (!(url in this.__callbacks)) this.__callbacks[url] = []\n        this.__callbacks[url].push(resolve)\n        fetch(url)\n          .then((response) => {\n            this.resourceLoader.incrementWorkDone(1) // done loading\n            if (checkStatus(response)) return response.arrayBuffer()\n            else {\n              reject(new Error(`loadArchive: ${response.status} - ${response.statusText} : ${url}`))\n            }\n          })\n          .then((buffer) => {\n            const resourceId = url\n            if (!(resourceId in this.__callbacks)) this.__callbacks[resourceId] = []\n            this.__callbacks[resourceId].push(resolve)\n\n            this.__getWorker().then((worker) => {\n              worker.postMessage({\n                type: 'unpack',\n                resourceId,\n                buffer,\n              })\n            })\n          })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n\n  /**\n   * The __onFinishedReceiveFileData method.\n   * @param {object} fileData - The fileData value.\n   * @private\n   */\n  __onFinishedReceiveFileData(fileData) {\n    const resourceId = fileData.resourceId\n    const callbacks = this.__callbacks[resourceId]\n    if (callbacks) {\n      for (const callback of callbacks) {\n        callback(fileData.entries)\n      }\n      delete this.__callbacks[resourceId]\n    }\n  }\n}\n\nexport { ArchiveUnpackerPlugin }\n","import { ArchiveUnpackerPlugin } from './SceneTree/ResourceLoader/ArchiveUnpackerPlugin.js'\nimport { JsonLoaderPlugin } from './SceneTree/ResourceLoader/JsonLoaderPlugin.js'\nimport { TextLoaderPlugin } from './SceneTree/ResourceLoader/TextLoaderPlugin.js'\nimport { BinaryLoaderPlugin } from './SceneTree/ResourceLoader/BinaryLoaderPlugin.js'\n\nconst archiveUnpackerPlugin = new ArchiveUnpackerPlugin()\nwindow.zeaEngine.resourceLoader.registerPlugin(archiveUnpackerPlugin)\n\nconst jsonLoaderPlugin = new JsonLoaderPlugin()\nwindow.zeaEngine.resourceLoader.registerPlugin(jsonLoaderPlugin)\n\nconst textLoaderPlugin = new TextLoaderPlugin()\nwindow.zeaEngine.resourceLoader.registerPlugin(textLoaderPlugin)\n\nconst binaryLoaderPlugin = new BinaryLoaderPlugin()\nwindow.zeaEngine.resourceLoader.registerPlugin(binaryLoaderPlugin)\n","function checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * JSON loader plugin.\n */\nclass JsonLoaderPlugin {\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'json'\n  }\n\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1)\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        fetch(url).then((response) => {\n          this.resourceLoader.incrementWorkDone(1)\n          if (checkStatus(response)) resolve(response.json())\n          else reject(`loadJSON: ${response.status} - ${response.statusText} : ${url}`)\n        })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n}\n\nexport { JsonLoaderPlugin }\n","function checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * Text loader plugin.\n */\nclass TextLoaderPlugin {\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'text'\n  }\n\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1)\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        fetch(url).then((response) => {\n          this.resourceLoader.incrementWorkDone(1)\n          if (checkStatus(response)) resolve(response.text())\n          else reject(`loadText: ${response.status} - ${response.statusText} : ${url}`)\n        })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n}\n\nexport { TextLoaderPlugin }\n","function checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * Binary loader plugin.\n */\nclass BinaryLoaderPlugin {\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'binary'\n  }\n\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1)\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        fetch(url).then((response) => {\n          this.resourceLoader.incrementWorkDone(1)\n          if (checkStatus(response)) resolve(response.arrayBuffer())\n          else reject(`loadBinary: ${response.status} - ${response.statusText} : ${url}`)\n        })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n}\n\nexport { BinaryLoaderPlugin }\n"],"names":["SystemDesc","window","navigator","isMobileDevice","isIOSDevice","browserName","webGLSupported","gpuDesc","deviceCategory","isMobile","userAgent","match","browserDesc","nAgt","nameOffset","verOffset","ix","appName","fullVersion","parseFloat","appVersion","majorVersion","parseInt","brave","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","getBrowserDesc","webgl","webgl2","document","createElement","getContext","e","debugInfo","getExtension","console","warn","vendor","renderer","gpuVendor","maxTextureSize","supportsWebGL2","undefined","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","MAX_TEXTURE_SIZE","getGPUDesc","parts","replace","split","gtxIdx","model","endsWith","length","includes","radeonIdx","rxIdx","modelNumber","ZeaSystemDesc","numCores","hardwareConcurrency","archiveUnpackerPlugin","[object Object]","this","__callbacks","__workers","__nextWorker","resourceLoader","wasmUrl","baseUrl","Promise","resolve","worker","ArchiveUnpackerWorker","postMessage","type","onmessage","event","data","__onFinishedReceiveFileData","error","resourceId","__constructWorker","terminate","url","incrementWorkload","reject","push","fetch","then","response","incrementWorkDone","ok","checkStatus","arrayBuffer","Error","status","statusText","buffer","__getWorker","fileData","callbacks","callback","entries","zeaEngine","registerPlugin","jsonLoaderPlugin","json","textLoaderPlugin","text","binaryLoaderPlugin"],"mappings":"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"}